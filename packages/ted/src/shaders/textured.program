#version 300 es

in vec4 aVertexPosition;
in vec2 aVertexUV;
in vec2 aVertexInstanceUV;

uniform mat4 uMMatrix;
uniform vec2 uInstanceUVScale;
uniform float uEnableInstanceUVs;

uniform Global {
  mat4 uVPMatrix;
};

out highp vec2 vUV;

void main() {
  gl_Position = uVPMatrix * uMMatrix * aVertexPosition;

  vUV = (aVertexInstanceUV * uEnableInstanceUVs + aVertexUV * (1.0 - uEnableInstanceUVs)) * uInstanceUVScale;
}
----
#version 300 es
precision mediump float;

uniform sampler2D uTexture;
uniform vec4 uColorFilter;

in highp vec2 vUV;

out vec4 outputColor;

void main() {
  vec4 textureColor = texture(uTexture, vUV);
  outputColor = textureColor * uColorFilter;
}
